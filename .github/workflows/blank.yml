name: Manual Approv and Create Tag

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Git
      run: |
        git config --global user.name "Mamadou Sadio"
        git config --global user.email "devmodou@gmail.com"

    - name: Increment version or create new tag
      id: increment_or_create_tag
      run: |
        # Retrieve the latest tag (if exists)
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null)
    
        if [[ -n "$LATEST_TAG" ]]; then
          IFS='.' read -r -a VERSION_PARTS <<< "$LATEST_TAG"
          NEW_PATCH_VERSION=$((VERSION_PARTS[3]+1))
          NEW_TAG="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}.$NEW_PATCH_VERSION"
          echo "Latest Tag: $LATEST_TAG"
          echo "New Tag: $NEW_TAG"
        else
          NEW_TAG="0.0.0.1"
          echo "No Tags Found. Setting New Tag to: $NEW_TAG"
        fi
    
        git tag "$NEW_TAG"
        git push --tags
        echo "::set-output name=versioned_tag::$NEW_TAG"

    
  staging-approval:
    runs-on: ubuntu-latest
    environment: 'Staging'
    needs:
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ask for staging deployment approval
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          echo "Do you want to deploy to staging environment? (YES/NO)"
          read -r confirmation

          if [[ $confirmation == "YES" ]]; then
            echo "Staging deployment is approved."
            echo "Proceeding with the deployment..."
          else
            echo "Staging deployment is not approved."
            echo "Skipping the staging deployment..."
            exit 0
          fi

      - name: Merge master into staging
        if: ${{ steps.staging-approval.outputs.approved == 'YES' }}
        run: |
          echo Start merge,
          git checkout staging
          git merge main
          git push origin staging
      










